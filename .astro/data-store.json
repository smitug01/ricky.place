[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.13.8","content-config-digest","1297f7737421a646","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://ricky.place\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"prefetch\":true,\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[\"webmention.io\"],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null,null],\"rehypePlugins\":[[null,{\"rel\":[\"nofollow, noreferrer\"],\"target\":\"_blank\"}],[null,{\"styleOverrides\":{\"borderRadius\":\"4px\",\"codeFontFamily\":\"ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\",\"codeFontSize\":\"0.875rem\",\"codeLineHeight\":\"1.7142857rem\",\"codePaddingInline\":\"1rem\",\"frames\":{\"frameBoxShadowCssValue\":\"none\"},\"uiLineHeight\":\"inherit\"},\"themes\":[\"dracula\",\"github-light\"],\"useThemedScrollbars\":false}]],\"remarkRehype\":{\"footnoteLabelProperties\":{\"className\":[\"\"]}},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false},\"legacy\":{\"collections\":false}}","post",["Map",11,12,56,57],"journey-ntust-to-ntnu-20250705",{"id":11,"data":13,"body":22,"filePath":23,"digest":24,"rendered":25,"legacyId":55},{"description":14,"draft":15,"publishDate":16,"tags":17,"title":21},"A personal story about leaving my comfort zone to pursue my true passion for Computer Science, choosing authenticity over convenience.",false,["Date","2025-07-04T16:00:00.000Z"],[18,19,20],"journey","university","education","From NTUST to NTNU","**A Journey of Courage: From NTUST to NTNU**\n\nSo today's a pretty big day for me. After months of going back and forth in my head, I finally submitted my leave of absence from Taiwan Tech (NTUST). It's weird - I'm not just thinking about change anymore, I'm actually doing it. Starting today, I'm officially switching from being a Taiwan Tech student to an NTNU student. No more joking around with \"天大地大台科大，台清交成在腳下\" with my classmates (though I'll definitely miss those moments).\n\n![Application for LoA](/images/iShot_2025-07-06_17.54.00.png)\n\n### How It All Started\n\nHonestly, I've been feeling this way for a while now. Even during my first year at Taiwan Tech, when everything was new and exciting, something just felt... off. Electronic Engineering is a solid major with great job prospects, but it wasn't doing it for me. I kept finding myself way more interested in Computer Science and Information Engineering - that's where things actually clicked and made sense.\n\nThe thing is, when I applied through Special Entry back then, my options were pretty limited based on my background. Electronic Engineering at Taiwan Tech was basically the best fit available at the time. Don't get me wrong - Taiwan Tech is a great school with a solid reputation, but it felt like wearing someone else's clothes. Nice clothes, but not really me.\n\nI kept up a decent GPA around 3.7 during my first year, but I noticed I was just going through the motions in my core engineering classes. The material was interesting enough, but it didn't give me that spark I was looking for.\n\n### Looking for a Way Out\n\nInstead of just accepting things as they were, I started researching other options. I looked into transferring within Taiwan Tech, checked out inter-university transfers, and even thought about applying through Special Entry again - this time knowing exactly what I wanted.\n\nThe cool thing about Special Entry is that it's pretty flexible. If I got in somewhere else, great. If not, I could just continue where I was without any penalties. Plus, they announce results early, so I'd have plenty of time to figure things out.\n\nWhen I started seriously looking at other schools, NYCU and NTHU caught my eye. But NTNU made the most sense for a few reasons. First, I could stay in Taipei and wouldn't have to move away from Keelung. Also, there's this interesting setup where Taiwan Tech and NTNU students can cross-register for classes, which could open up some cool possibilities later.\n\n![NTNU Examination Permit](/images/iShot_2025-07-06_18.45.47.png)\n\n### The Big News\n\nIn early January 2025, the results came in. I got accepted into NTNU's Computer Science and Information Engineering department with a perfect 100 on the document review. To be honest, I wasn't that shocked. After working in the field for a year, I had way more experience and confidence than when I first applied to universities.\n\n![NTNU 2025 Special-Entry Admission List](/images/iShot_2025-07-06_18.37.38.png)\n\nBut getting accepted was just the beginning. Standing at this crossroads, I felt pretty overwhelmed. Should I leave Taiwan Tech where I'd made friends, gotten comfortable, and found my place? Starting over - academically, socially, personally - was both exciting and terrifying.\n\n### The Reality Check\n\nThe numbers were kind of intimidating: about 25% of my graduating class from Da'an Vocational High School ended up at Taiwan Tech, so I had this built-in network of familiar faces. At NTNU, I'd basically know nobody. That meant starting from scratch with making friends, learning new systems, and adapting to a completely different vibe.\n\nAnd then there's the academic side - I'd essentially be starting university over, which means graduating at least a year later than my current classmates. That's a pretty big deal when you think about career timing and life plans.\n\n### The Push I Needed\n\nDuring all this back-and-forth, my colleague Lumi really helped me see things clearly. She basically told me that staying somewhere just because it's comfortable or expected is actually the riskier move in the long run. Her support gave me the push I needed to prioritize what would actually make me happy over what was just convenient.\n\nWith her encouragement, I started seeing this transition differently. Instead of abandoning what I'd built, I was finally going after what I actually wanted. The decision became clear: I'd step out of my comfort zone and follow my passion for Computer Science, trusting that the temporary discomfort would be worth it.\n\n### Taking the Leap\n\nToday, as I officially start at National Taiwan Normal University, I'm feeling a mix of excitement, nervousness, and hope. This isn't just about changing schools or majors - it's about committing to figuring out who I really am and having the guts to pursue what actually inspires me, even when the path ahead is unclear.\n\nI have no idea what's going to happen next, and I can't predict if this choice will lead exactly where I'm hoping. There's even a part of me wondering if I might come back to Taiwan Tech someday to do a dual bachelor's degree, getting the best of both worlds. But what I do know is that I'm done wondering \"what if.\" I'm ready to find out \"what is\" and \"what could be.\"\n\nGrowth doesn't happen when you're comfortable. Sometimes the most meaningful journeys start with the courage to leave what's familiar and head toward something that feels right, even when you can't see the whole picture yet.\n\nHere's to new beginnings, following passion over convenience, and the beautiful uncertainty of a future shaped by authentic choices rather than just settling. My move from Taiwan Tech to NTNU isn't just about changing universities - it's about changing my life's direction toward something that actually feels like me.\n\n![NTNU Notify About Entry](/images/iShot_2025-07-06_18.50.34.png)\n\nMaybe I'll come back to finish my bachelor's degree in electronic engineering. Ha. Goodbye NTUST!","src/content/post/journey-ntust-to-ntnu-20250705.md","871e4cc7a8fbe4cb",{"html":26,"metadata":27},"\u003Cp>\u003Cstrong>A Journey of Courage: From NTUST to NTNU\u003C/strong>\u003C/p>\n\u003Cp>So today’s a pretty big day for me. After months of going back and forth in my head, I finally submitted my leave of absence from Taiwan Tech (NTUST). It’s weird - I’m not just thinking about change anymore, I’m actually doing it. Starting today, I’m officially switching from being a Taiwan Tech student to an NTNU student. No more joking around with “天大地大台科大，台清交成在腳下” with my classmates (though I’ll definitely miss those moments).\u003C/p>\n\u003Cimg src=\"/images/iShot_2025-07-06_17.54.00.png\" alt=\"Application for LoA\">\n\u003Ch3 id=\"how-it-all-started\">How It All Started\u003C/h3>\n\u003Cp>Honestly, I’ve been feeling this way for a while now. Even during my first year at Taiwan Tech, when everything was new and exciting, something just felt… off. Electronic Engineering is a solid major with great job prospects, but it wasn’t doing it for me. I kept finding myself way more interested in Computer Science and Information Engineering - that’s where things actually clicked and made sense.\u003C/p>\n\u003Cp>The thing is, when I applied through Special Entry back then, my options were pretty limited based on my background. Electronic Engineering at Taiwan Tech was basically the best fit available at the time. Don’t get me wrong - Taiwan Tech is a great school with a solid reputation, but it felt like wearing someone else’s clothes. Nice clothes, but not really me.\u003C/p>\n\u003Cp>I kept up a decent GPA around 3.7 during my first year, but I noticed I was just going through the motions in my core engineering classes. The material was interesting enough, but it didn’t give me that spark I was looking for.\u003C/p>\n\u003Ch3 id=\"looking-for-a-way-out\">Looking for a Way Out\u003C/h3>\n\u003Cp>Instead of just accepting things as they were, I started researching other options. I looked into transferring within Taiwan Tech, checked out inter-university transfers, and even thought about applying through Special Entry again - this time knowing exactly what I wanted.\u003C/p>\n\u003Cp>The cool thing about Special Entry is that it’s pretty flexible. If I got in somewhere else, great. If not, I could just continue where I was without any penalties. Plus, they announce results early, so I’d have plenty of time to figure things out.\u003C/p>\n\u003Cp>When I started seriously looking at other schools, NYCU and NTHU caught my eye. But NTNU made the most sense for a few reasons. First, I could stay in Taipei and wouldn’t have to move away from Keelung. Also, there’s this interesting setup where Taiwan Tech and NTNU students can cross-register for classes, which could open up some cool possibilities later.\u003C/p>\n\u003Cimg src=\"/images/iShot_2025-07-06_18.45.47.png\" alt=\"NTNU Examination Permit\">\n\u003Ch3 id=\"the-big-news\">The Big News\u003C/h3>\n\u003Cp>In early January 2025, the results came in. I got accepted into NTNU’s Computer Science and Information Engineering department with a perfect 100 on the document review. To be honest, I wasn’t that shocked. After working in the field for a year, I had way more experience and confidence than when I first applied to universities.\u003C/p>\n\u003Cimg src=\"/images/iShot_2025-07-06_18.37.38.png\" alt=\"NTNU 2025 Special-Entry Admission List\">\n\u003Cp>But getting accepted was just the beginning. Standing at this crossroads, I felt pretty overwhelmed. Should I leave Taiwan Tech where I’d made friends, gotten comfortable, and found my place? Starting over - academically, socially, personally - was both exciting and terrifying.\u003C/p>\n\u003Ch3 id=\"the-reality-check\">The Reality Check\u003C/h3>\n\u003Cp>The numbers were kind of intimidating: about 25% of my graduating class from Da’an Vocational High School ended up at Taiwan Tech, so I had this built-in network of familiar faces. At NTNU, I’d basically know nobody. That meant starting from scratch with making friends, learning new systems, and adapting to a completely different vibe.\u003C/p>\n\u003Cp>And then there’s the academic side - I’d essentially be starting university over, which means graduating at least a year later than my current classmates. That’s a pretty big deal when you think about career timing and life plans.\u003C/p>\n\u003Ch3 id=\"the-push-i-needed\">The Push I Needed\u003C/h3>\n\u003Cp>During all this back-and-forth, my colleague Lumi really helped me see things clearly. She basically told me that staying somewhere just because it’s comfortable or expected is actually the riskier move in the long run. Her support gave me the push I needed to prioritize what would actually make me happy over what was just convenient.\u003C/p>\n\u003Cp>With her encouragement, I started seeing this transition differently. Instead of abandoning what I’d built, I was finally going after what I actually wanted. The decision became clear: I’d step out of my comfort zone and follow my passion for Computer Science, trusting that the temporary discomfort would be worth it.\u003C/p>\n\u003Ch3 id=\"taking-the-leap\">Taking the Leap\u003C/h3>\n\u003Cp>Today, as I officially start at National Taiwan Normal University, I’m feeling a mix of excitement, nervousness, and hope. This isn’t just about changing schools or majors - it’s about committing to figuring out who I really am and having the guts to pursue what actually inspires me, even when the path ahead is unclear.\u003C/p>\n\u003Cp>I have no idea what’s going to happen next, and I can’t predict if this choice will lead exactly where I’m hoping. There’s even a part of me wondering if I might come back to Taiwan Tech someday to do a dual bachelor’s degree, getting the best of both worlds. But what I do know is that I’m done wondering “what if.” I’m ready to find out “what is” and “what could be.”\u003C/p>\n\u003Cp>Growth doesn’t happen when you’re comfortable. Sometimes the most meaningful journeys start with the courage to leave what’s familiar and head toward something that feels right, even when you can’t see the whole picture yet.\u003C/p>\n\u003Cp>Here’s to new beginnings, following passion over convenience, and the beautiful uncertainty of a future shaped by authentic choices rather than just settling. My move from Taiwan Tech to NTNU isn’t just about changing universities - it’s about changing my life’s direction toward something that actually feels like me.\u003C/p>\n\u003Cimg src=\"/images/iShot_2025-07-06_18.50.34.png\" alt=\"NTNU Notify About Entry\">\n\u003Cp>Maybe I’ll come back to finish my bachelor’s degree in electronic engineering. Ha. Goodbye NTUST!\u003C/p>",{"headings":28,"localImagePaths":48,"remoteImagePaths":49,"frontmatter":50,"imagePaths":54},[29,33,36,39,42,45],{"depth":30,"slug":31,"text":32},3,"how-it-all-started","How It All Started",{"depth":30,"slug":34,"text":35},"looking-for-a-way-out","Looking for a Way Out",{"depth":30,"slug":37,"text":38},"the-big-news","The Big News",{"depth":30,"slug":40,"text":41},"the-reality-check","The Reality Check",{"depth":30,"slug":43,"text":44},"the-push-i-needed","The Push I Needed",{"depth":30,"slug":46,"text":47},"taking-the-leap","Taking the Leap",[],[],{"title":21,"description":14,"publishDate":51,"tags":52,"draft":15,"minutesRead":53},"05 Jul 2025",[18,19,20],"5 min read",[],"journey-ntust-to-ntnu-20250705.md","contest-aegis-20240914",{"id":56,"data":58,"body":66,"filePath":67,"digest":68,"rendered":69,"legacyId":94},{"description":59,"draft":15,"publishDate":60,"tags":61,"title":65},"This post contains the writeup for the Aegis CTF 2024 competition.",["Date","2024-09-13T16:00:00.000Z"],[62,63,64],"aegis","ctf","writeup","Aegis CTF 2024 Writeup","### WEB - 1. JSFBOX\n\n題目中提供一個網頁，只能輸入符號 (Symbol)，有提供原始碼，\n要讓網頁爆出 Flag。\n\n#### 題目\n\n```\nconst express = require('express');\nconst app = express();\nconst fs = require('fs');\nconst fa = fs.readFileSync('/flag', 'utf-8');\nconst port = 1024;\n\napp.use(express.text());\n\napp.use(\"/\", express.static(\"static\"));\n\napp.post(\"/escape\", (req, res) => {\n    body = req.body;\n    let validationResult = validateString(body);\n\n    if (validationResult !== \"String is valid.\") {\n        return res.send(validationResult);\n    }\n\n    console.log(body);\n\n    let result;\n    try {\n        result = eval(body).toString();\n    } catch (e) {\n        return res.send(\"Something went wrong with your code.\");\n    }\n\n    try {\n        if (String (eval(result)) === fa) {\n            return res.send(\"WOW! How did you know the flag?\");\n        }\n    } catch (e) {}\n\n    return res.send(\"Good job! Try harder.\");\n});\n\napp.listen(port, () => {\n    console.log(`App running on http://localhost:${port}`);\n});\n\nfunction validateString(input) {\n    if (!/^[^\\w=]+$/.test(input)) {\n        return \"ERROR: Input must only contain symbols.\";\n    }\n\n    const charCount = {};\n    for (let char of input) {\n        charCount[char] = (charCount[char] || 0) + 1;\n    }\n\n    const sortedSymbols = Object.keys(charCount).sort((a, b) => charCount[b] - charCount[a]);\n\n    if (sortedSymbols.length > 2**4) {\n        return \"ERROR: More than 8 different symbols used.\";\n    }\n\n    for (let i = 0; i \u003C sortedSymbols.length; i++) {\n        const maxAllowed = 2**7 - i;\n        if (charCount[sortedSymbols[i]] > maxAllowed) {\n            return `ERROR: Symbol '${sortedSymbols[i]}' appeared ${charCount[sortedSymbols[i]]} times, which exceeds the limit of ${maxAllowed}.`;\n        }\n    }\n\n    return \"String is valid.\";\n}\n\n```\n\n#### 解法\n\n使用 eval 函數對比，可以直接帶入 res.send(fa)，就能成功把 Flag 搞出來。\n\n題目既然只能用 symbols 作為輸入，那第一步就聯想到 JSFuck，\n但原生 JSFuck 產生器會有很多符號，需要自己改良跟運用他比較寬鬆的 regex。\n\n```\n(!![]+[])[+!+[]] + // r\n(!![]+[])[!+[]+!+[]+!+[]] + // r\n(![]+[])[+!+[]+!+[]+!+[]] + // s\n\".\" + // .\n(![]+[])[+!+[]+!+[]+!+[]] + // s\n(!![]+[])[!+[]+!+[]+!+[]] + // e\n([][[]]+[])[+!+[]] + // n\n([][[]]+[])[!+[]+!+[]] + // d\n\"(\" + // (\n((![]+[])[+[]]+(![]+[])[+!+[]]) + // fa\n\")\" // )\n```\n\n### MISC - 1. Eazy Jail\n\n題目有分兩個 Stage, 分別是 Python 跟 JS，\n第一個 Stage，是在 Python int(input) 的情況下，\n要分別用 1, 3, 4, 6, 7, 8, 10, 11 長度的輸入解出 2。\n\n第二個 Stage，是在 JS 的請況下，\n要同時滿足 Number(input) 跟 safeEval(input) 分別為 1024 與 532。\n\n#### 題目\n\n```\nimport os\n\ndef validate_and_execute(user_input, expected_length):\n    EXPECTED_RESULT = 2\n    allowed_characters = set('abcdefg123456{}\"')\n\n    if len(user_input) != expected_length:\n        print(f\"Invalid input length. Your input must be exactly {expected_length} characters long.\")\n        return False\n\n    if set(user_input).difference(allowed_characters):\n        print(\"Invalid input. Only a,b,c,d,e,f,g,1,2,3,4,5,{,} certain characters are allowed.\")\n        return False\n\n    expression = f\"int({user_input})\"\n    result = eval(expression, {'__builtins__': None}, {'int': int})\n    try:\n        if  result != EXPECTED_RESULT:\n            print(f\"Error.\")\n            return False\n        else:\n            return True\n    except Exception:\n        print(f\"Error.\")\n        return False\n\nlevels = [1, 3, 4, 6, 7, 8, 10, 11]\n\ndef start_game():\n    logo=\"\"\"\n░█████╗░███████╗░██████╗░██╗░██████╗ Eazy Jail For Beginner\n██╔══██╗██╔════╝██╔════╝░██║██╔════╝\n███████║█████╗░░██║░░██╗░██║╚█████╗░\n██╔══██║██╔══╝░░██║░░╚██╗██║░╚═══██╗\n██║░░██║███████╗╚██████╔╝██║██████╔╝\n╚═╝░░╚═╝╚══════╝░╚═════╝░╚═╝╚═════╝░ STAGE 1\"\"\"\n    print(logo)\n    print(\"Your task is to enter a string that, when used in a command like 'int(YOUR_INPUT)', results in the number 2.\")\n    print(\"Each level requires a different input length. If you succeed through all levels, you will reach the next stage!\")\n    for level in levels:\n        print(f\"\\nLevel {levels.index(level) + 1} of {len(levels)}: Enter a payload exactly {level} characters long.\")\n        while True:\n            user_input = input(\"Enter a payload: \")\n            if validate_and_execute(user_input, level):\n                print(f\"Congratulations on passing level {levels.index(level) + 1}!\")\n                if level == 11:\n                    os.system('clear')\n                    os.system('node stage2.js')\n                    return\n                break\n            else:\n                print(\"An error occurred.\")\n                return\n\nif __name__ == \"__main__\":\n    start_game()\n    exit()\n```\n\n```\nconst fs = require('fs');\nconst fa = fs.readFileSync('./flag', 'utf-8');\n\nconst readline = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nconst QUESTION = `\nWhat's my favorite number?\n\n- 1024 is my birthday\n- 532 is my last 3 digits of my phone\n`;\n\nconst CORRECT_ANSWER = 1024;\nconst EXPECTED_RESULT = 532;\n\nconsole.log(QUESTION);\n\nreadline.question('Guess the number: ', input => {\n    const guessedNumber = Number(input);\n    console.log(guessedNumber);\n\n    let spinnerInterval;\n    let spinnerIndex = 0;\n    const spinnerChars = ['|', '/', '-', '\\\\'];\n\n    const startSpinner = () => {\n        spinnerInterval = setInterval(() => {\n            process.stdout.write(`\\rChecking your answer... ${spinnerChars[spinnerIndex]}`);\n            spinnerIndex = (spinnerIndex + 1) % spinnerChars.length;\n        }, 100);\n    };\n\n    const stopSpinner = () => {\n        clearInterval(spinnerInterval);\n        process.stdout.write('\\rChecking your answer... Done!\\n');\n    };\n\n    startSpinner();\n\n    setTimeout(() => {\n        stopSpinner();\n        console.log(`\\n=====================================\\n`);\n        if (guessedNumber === CORRECT_ANSWER) {\n            console.log(`Great! You got the number - Awesome!`);\n            try {\n                const evaluationResult = safeEval(input);\n                if (evaluationResult === EXPECTED_RESULT) {\n                    displaySuccess();\n                } else {\n                    displayFailure();\n                }\n            } catch (error) {\n                displayError();\n            }\n        } else {\n            displayFailure();\n        }\n        readline.close();\n    }, 1500);\n});\n\nfunction safeEval(input) {\n    const allowedChars = /^[0-9+\\-*/.\\s]+$/;\n\n    if (!allowedChars.test(input)) {\n        throw new Error('Invalid characters detected!');\n    }\n\n    return new Function(`return (${input})`)();\n}\n\nfunction displaySuccess() {\n    console.log(`Good job! You got it! :)`);\n    console.log(`Flag: ${fa.trim()}\\n`);\n}\n\nfunction displayFailure() {\n    console.log('Oops! Wrong answer! Try again :)\\n');\n}\n\nfunction displayError() {\n    console.log(`Error occurred! Please try again!\\n`);\n}\n```\n\n#### 解法\n\n第一個 Stage: [ 2, \"2\", b\"2\", f\"{2}\", \"\"\"2\"\"\", f\"\"\"2\"\"\", f\"\"\"{2}\"\"\", f\"{f\"{2}\"}\" ]\n\n第二個 Stage: 運用新版 JS Number(input) 不會辨識進位的特性，使用 01024 讓他取得 1024, 後面 safeEval(input) 時會辨識進為八進位，1024 即為 532，可滿足兩個條件。","src/content/post/contest-aegis-20240914.md","9e7e8b5f1fab7067",{"html":70,"metadata":71},"\u003Ch3 id=\"web---1-jsfbox\">WEB - 1. JSFBOX\u003C/h3>\n\u003Cp>題目中提供一個網頁，只能輸入符號 (Symbol)，有提供原始碼，\n要讓網頁爆出 Flag。\u003C/p>\n\u003Ch4 id=\"題目\">題目\u003C/h4>\n\u003Cdiv class=\"expressive-code\">\u003Clink rel=\"stylesheet\" href=\"/_astro/ec.qwcc5.css\">\u003Cscript type=\"module\" src=\"/_astro/ec.p1z7b.js\">\u003C/script>\u003Cfigure class=\"frame\">\u003Cfigcaption class=\"header\">\u003C/figcaption>\u003Cpre data-language=\"plaintext\">\u003Ccode>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const express = require('express');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const app = express();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const fs = require('fs');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const fa = fs.readFileSync('/flag', 'utf-8');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const port = 1024;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">app.use(express.text());\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">app.use(\"/\", express.static(\"static\"));\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">app.post(\"/escape\", (req, res) => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">body = req.body;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">let validationResult = validateString(body);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (validationResult !== \"String is valid.\") {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return res.send(validationResult);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(body);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">let result;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">try {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">result = eval(body).toString();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">} catch (e) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return res.send(\"Something went wrong with your code.\");\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">try {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (String (eval(result)) === fa) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return res.send(\"WOW! How did you know the flag?\");\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">} catch (e) {}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return res.send(\"Good job! Try harder.\");\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">});\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">app.listen(port, () => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`App running on http://localhost:${port}`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">});\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">function validateString(input) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (!/^[^\\w=]+$/.test(input)) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return \"ERROR: Input must only contain symbols.\";\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const charCount = {};\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">for (let char of input) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">charCount[char] = (charCount[char] || 0) + 1;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const sortedSymbols = Object.keys(charCount).sort((a, b) => charCount[b] - charCount[a]);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (sortedSymbols.length > 2**4) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return \"ERROR: More than 8 different symbols used.\";\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">for (let i = 0; i &#x3C; sortedSymbols.length; i++) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const maxAllowed = 2**7 - i;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (charCount[sortedSymbols[i]] > maxAllowed) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return `ERROR: Symbol '${sortedSymbols[i]}' appeared ${charCount[sortedSymbols[i]]} times, which exceeds the limit of ${maxAllowed}.`;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return \"String is valid.\";\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003C/code>\u003C/pre>\u003Cdiv class=\"copy\">\u003Cbutton title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const express = require(&#x27;express&#x27;);const app = express();const fs = require(&#x27;fs&#x27;);const fa = fs.readFileSync(&#x27;/flag&#x27;, &#x27;utf-8&#x27;);const port = 1024;app.use(express.text());app.use(&#x22;/&#x22;, express.static(&#x22;static&#x22;));app.post(&#x22;/escape&#x22;, (req, res) => {    body = req.body;    let validationResult = validateString(body);    if (validationResult !== &#x22;String is valid.&#x22;) {        return res.send(validationResult);    }    console.log(body);    let result;    try {        result = eval(body).toString();    } catch (e) {        return res.send(&#x22;Something went wrong with your code.&#x22;);    }    try {        if (String (eval(result)) === fa) {            return res.send(&#x22;WOW! How did you know the flag?&#x22;);        }    } catch (e) {}    return res.send(&#x22;Good job! Try harder.&#x22;);});app.listen(port, () => {    console.log(&#x60;App running on http://localhost:${port}&#x60;);});function validateString(input) {    if (!/^[^\\w=]+$/.test(input)) {        return &#x22;ERROR: Input must only contain symbols.&#x22;;    }    const charCount = {};    for (let char of input) {        charCount[char] = (charCount[char] || 0) + 1;    }    const sortedSymbols = Object.keys(charCount).sort((a, b) => charCount[b] - charCount[a]);    if (sortedSymbols.length > 2**4) {        return &#x22;ERROR: More than 8 different symbols used.&#x22;;    }    for (let i = 0; i \u003C sortedSymbols.length; i++) {        const maxAllowed = 2**7 - i;        if (charCount[sortedSymbols[i]] > maxAllowed) {            return &#x60;ERROR: Symbol &#x27;${sortedSymbols[i]}&#x27; appeared ${charCount[sortedSymbols[i]]} times, which exceeds the limit of ${maxAllowed}.&#x60;;        }    }    return &#x22;String is valid.&#x22;;}\">\u003Cdiv>\u003C/div>\u003C/button>\u003C/div>\u003C/figure>\u003C/div>\n\u003Ch4 id=\"解法\">解法\u003C/h4>\n\u003Cp>使用 eval 函數對比，可以直接帶入 res.send(fa)，就能成功把 Flag 搞出來。\u003C/p>\n\u003Cp>題目既然只能用 symbols 作為輸入，那第一步就聯想到 JSFuck，\n但原生 JSFuck 產生器會有很多符號，需要自己改良跟運用他比較寬鬆的 regex。\u003C/p>\n\u003Cdiv class=\"expressive-code\">\u003Cfigure class=\"frame\">\u003Cfigcaption class=\"header\">\u003C/figcaption>\u003Cpre data-language=\"plaintext\">\u003Ccode>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">(!![]+[])[+!+[]] + // r\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">(!![]+[])[!+[]+!+[]+!+[]] + // r\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">(![]+[])[+!+[]+!+[]+!+[]] + // s\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">\".\" + // .\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">(![]+[])[+!+[]+!+[]+!+[]] + // s\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">(!![]+[])[!+[]+!+[]+!+[]] + // e\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">([][[]]+[])[+!+[]] + // n\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">([][[]]+[])[!+[]+!+[]] + // d\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">\"(\" + // (\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">((![]+[])[+[]]+(![]+[])[+!+[]]) + // fa\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">\")\" // )\u003C/span>\u003C/div>\u003C/div>\u003C/code>\u003C/pre>\u003Cdiv class=\"copy\">\u003Cbutton title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"(!![]+[])[+!+[]] + // r(!![]+[])[!+[]+!+[]+!+[]] + // r(![]+[])[+!+[]+!+[]+!+[]] + // s&#x22;.&#x22; + // .(![]+[])[+!+[]+!+[]+!+[]] + // s(!![]+[])[!+[]+!+[]+!+[]] + // e([][[]]+[])[+!+[]] + // n([][[]]+[])[!+[]+!+[]] + // d&#x22;(&#x22; + // (((![]+[])[+[]]+(![]+[])[+!+[]]) + // fa&#x22;)&#x22; // )\">\u003Cdiv>\u003C/div>\u003C/button>\u003C/div>\u003C/figure>\u003C/div>\n\u003Ch3 id=\"misc---1-eazy-jail\">MISC - 1. Eazy Jail\u003C/h3>\n\u003Cp>題目有分兩個 Stage, 分別是 Python 跟 JS，\n第一個 Stage，是在 Python int(input) 的情況下，\n要分別用 1, 3, 4, 6, 7, 8, 10, 11 長度的輸入解出 2。\u003C/p>\n\u003Cp>第二個 Stage，是在 JS 的請況下，\n要同時滿足 Number(input) 跟 safeEval(input) 分別為 1024 與 532。\u003C/p>\n\u003Ch4 id=\"題目-1\">題目\u003C/h4>\n\u003Cdiv class=\"expressive-code\">\u003Cfigure class=\"frame\">\u003Cfigcaption class=\"header\">\u003C/figcaption>\u003Cpre data-language=\"plaintext\">\u003Ccode>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">import os\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">def validate_and_execute(user_input, expected_length):\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">EXPECTED_RESULT = 2\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">allowed_characters = set('abcdefg123456{}\"')\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if len(user_input) != expected_length:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(f\"Invalid input length. Your input must be exactly {expected_length} characters long.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return False\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if set(user_input).difference(allowed_characters):\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(\"Invalid input. Only a,b,c,d,e,f,g,1,2,3,4,5,{,} certain characters are allowed.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return False\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">expression = f\"int({user_input})\"\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">result = eval(expression, {'__builtins__': None}, {'int': int})\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">try:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if  result != EXPECTED_RESULT:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(f\"Error.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return False\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">else:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return True\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">except Exception:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(f\"Error.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return False\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">levels = [1, 3, 4, 6, 7, 8, 10, 11]\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">def start_game():\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">logo=\"\"\"\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">░█████╗░███████╗░██████╗░██╗░██████╗ Eazy Jail For Beginner\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">██╔══██╗██╔════╝██╔════╝░██║██╔════╝\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">███████║█████╗░░██║░░██╗░██║╚█████╗░\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">██╔══██║██╔══╝░░██║░░╚██╗██║░╚═══██╗\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">██║░░██║███████╗╚██████╔╝██║██████╔╝\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">╚═╝░░╚═╝╚══════╝░╚═════╝░╚═╝╚═════╝░ STAGE 1\"\"\"\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(logo)\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(\"Your task is to enter a string that, when used in a command like 'int(YOUR_INPUT)', results in the number 2.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(\"Each level requires a different input length. If you succeed through all levels, you will reach the next stage!\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">for level in levels:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(f\"\\nLevel {levels.index(level) + 1} of {len(levels)}: Enter a payload exactly {level} characters long.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">while True:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">user_input = input(\"Enter a payload: \")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if validate_and_execute(user_input, level):\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(f\"Congratulations on passing level {levels.index(level) + 1}!\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if level == 11:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">os.system('clear')\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">os.system('node stage2.js')\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">break\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">else:\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">print(\"An error occurred.\")\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if __name__ == \"__main__\":\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">start_game()\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">exit()\u003C/span>\u003C/div>\u003C/div>\u003C/code>\u003C/pre>\u003Cdiv class=\"copy\">\u003Cbutton title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import osdef validate_and_execute(user_input, expected_length):    EXPECTED_RESULT = 2    allowed_characters = set(&#x27;abcdefg123456{}&#x22;&#x27;)    if len(user_input) != expected_length:        print(f&#x22;Invalid input length. Your input must be exactly {expected_length} characters long.&#x22;)        return False    if set(user_input).difference(allowed_characters):        print(&#x22;Invalid input. Only a,b,c,d,e,f,g,1,2,3,4,5,{,} certain characters are allowed.&#x22;)        return False    expression = f&#x22;int({user_input})&#x22;    result = eval(expression, {&#x27;__builtins__&#x27;: None}, {&#x27;int&#x27;: int})    try:        if  result != EXPECTED_RESULT:            print(f&#x22;Error.&#x22;)            return False        else:            return True    except Exception:        print(f&#x22;Error.&#x22;)        return Falselevels = [1, 3, 4, 6, 7, 8, 10, 11]def start_game():    logo=&#x22;&#x22;&#x22;░█████╗░███████╗░██████╗░██╗░██████╗ Eazy Jail For Beginner██╔══██╗██╔════╝██╔════╝░██║██╔════╝███████║█████╗░░██║░░██╗░██║╚█████╗░██╔══██║██╔══╝░░██║░░╚██╗██║░╚═══██╗██║░░██║███████╗╚██████╔╝██║██████╔╝╚═╝░░╚═╝╚══════╝░╚═════╝░╚═╝╚═════╝░ STAGE 1&#x22;&#x22;&#x22;    print(logo)    print(&#x22;Your task is to enter a string that, when used in a command like &#x27;int(YOUR_INPUT)&#x27;, results in the number 2.&#x22;)    print(&#x22;Each level requires a different input length. If you succeed through all levels, you will reach the next stage!&#x22;)    for level in levels:        print(f&#x22;\\nLevel {levels.index(level) + 1} of {len(levels)}: Enter a payload exactly {level} characters long.&#x22;)        while True:            user_input = input(&#x22;Enter a payload: &#x22;)            if validate_and_execute(user_input, level):                print(f&#x22;Congratulations on passing level {levels.index(level) + 1}!&#x22;)                if level == 11:                    os.system(&#x27;clear&#x27;)                    os.system(&#x27;node stage2.js&#x27;)                    return                break            else:                print(&#x22;An error occurred.&#x22;)                returnif __name__ == &#x22;__main__&#x22;:    start_game()    exit()\">\u003Cdiv>\u003C/div>\u003C/button>\u003C/div>\u003C/figure>\u003C/div>\n\u003Cdiv class=\"expressive-code\">\u003Cfigure class=\"frame\">\u003Cfigcaption class=\"header\">\u003C/figcaption>\u003Cpre data-language=\"plaintext\">\u003Ccode>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const fs = require('fs');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const fa = fs.readFileSync('./flag', 'utf-8');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const readline = require('readline').createInterface({\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">input: process.stdin,\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">output: process.stdout\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">});\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const QUESTION = `\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">What's my favorite number?\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">- 1024 is my birthday\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">- 532 is my last 3 digits of my phone\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">`;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const CORRECT_ANSWER = 1024;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const EXPECTED_RESULT = 532;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(QUESTION);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">readline.question('Guess the number: ', input => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const guessedNumber = Number(input);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(guessedNumber);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">let spinnerInterval;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">let spinnerIndex = 0;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const spinnerChars = ['|', '/', '-', '\\\\'];\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const startSpinner = () => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">spinnerInterval = setInterval(() => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">process.stdout.write(`\\rChecking your answer... ${spinnerChars[spinnerIndex]}`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">spinnerIndex = (spinnerIndex + 1) % spinnerChars.length;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}, 100);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">};\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const stopSpinner = () => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">clearInterval(spinnerInterval);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">process.stdout.write('\\rChecking your answer... Done!\\n');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">};\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">startSpinner();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">setTimeout(() => {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">stopSpinner();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`\\n=====================================\\n`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (guessedNumber === CORRECT_ANSWER) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`Great! You got the number - Awesome!`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">try {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const evaluationResult = safeEval(input);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (evaluationResult === EXPECTED_RESULT) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">displaySuccess();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">} else {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">displayFailure();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">} catch (error) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">                \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">displayError();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">} else {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">            \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">displayFailure();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">readline.close();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}, 1500);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">});\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">function safeEval(input) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">const allowedChars = /^[0-9+\\-*/.\\s]+$/;\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">if (!allowedChars.test(input)) {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">        \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">throw new Error('Invalid characters detected!');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">return new Function(`return (${input})`)();\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">function displaySuccess() {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`Good job! You got it! :)`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`Flag: ${fa.trim()}\\n`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">function displayFailure() {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log('Oops! Wrong answer! Try again :)\\n');\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\n\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">function displayError() {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">    \u003C/span>\u003C/span>\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">console.log(`Error occurred! Please try again!\\n`);\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan style=\"--0:#f8f8f2;--1:#24292e\">}\u003C/span>\u003C/div>\u003C/div>\u003C/code>\u003C/pre>\u003Cdiv class=\"copy\">\u003Cbutton title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const fs = require(&#x27;fs&#x27;);const fa = fs.readFileSync(&#x27;./flag&#x27;, &#x27;utf-8&#x27;);const readline = require(&#x27;readline&#x27;).createInterface({    input: process.stdin,    output: process.stdout});const QUESTION = &#x60;What&#x27;s my favorite number?- 1024 is my birthday- 532 is my last 3 digits of my phone&#x60;;const CORRECT_ANSWER = 1024;const EXPECTED_RESULT = 532;console.log(QUESTION);readline.question(&#x27;Guess the number: &#x27;, input => {    const guessedNumber = Number(input);    console.log(guessedNumber);    let spinnerInterval;    let spinnerIndex = 0;    const spinnerChars = [&#x27;|&#x27;, &#x27;/&#x27;, &#x27;-&#x27;, &#x27;\\\\&#x27;];    const startSpinner = () => {        spinnerInterval = setInterval(() => {            process.stdout.write(&#x60;\\rChecking your answer... ${spinnerChars[spinnerIndex]}&#x60;);            spinnerIndex = (spinnerIndex + 1) % spinnerChars.length;        }, 100);    };    const stopSpinner = () => {        clearInterval(spinnerInterval);        process.stdout.write(&#x27;\\rChecking your answer... Done!\\n&#x27;);    };    startSpinner();    setTimeout(() => {        stopSpinner();        console.log(&#x60;\\n=====================================\\n&#x60;);        if (guessedNumber === CORRECT_ANSWER) {            console.log(&#x60;Great! You got the number - Awesome!&#x60;);            try {                const evaluationResult = safeEval(input);                if (evaluationResult === EXPECTED_RESULT) {                    displaySuccess();                } else {                    displayFailure();                }            } catch (error) {                displayError();            }        } else {            displayFailure();        }        readline.close();    }, 1500);});function safeEval(input) {    const allowedChars = /^[0-9+\\-*/.\\s]+$/;    if (!allowedChars.test(input)) {        throw new Error(&#x27;Invalid characters detected!&#x27;);    }    return new Function(&#x60;return (${input})&#x60;)();}function displaySuccess() {    console.log(&#x60;Good job! You got it! :)&#x60;);    console.log(&#x60;Flag: ${fa.trim()}\\n&#x60;);}function displayFailure() {    console.log(&#x27;Oops! Wrong answer! Try again :)\\n&#x27;);}function displayError() {    console.log(&#x60;Error occurred! Please try again!\\n&#x60;);}\">\u003Cdiv>\u003C/div>\u003C/button>\u003C/div>\u003C/figure>\u003C/div>\n\u003Ch4 id=\"解法-1\">解法\u003C/h4>\n\u003Cp>第一個 Stage: [ 2, “2”, b”2”, f”{2}”, \"\"\"2\"\"\", f\"\"\"2\"\"\", f\"\"\"{2}\"\"\", f”{f”{2}”}” ]\u003C/p>\n\u003Cp>第二個 Stage: 運用新版 JS Number(input) 不會辨識進位的特性，使用 01024 讓他取得 1024, 後面 safeEval(input) 時會辨識進為八進位，1024 即為 532，可滿足兩個條件。\u003C/p>",{"headings":72,"localImagePaths":88,"remoteImagePaths":89,"frontmatter":90,"imagePaths":93},[73,76,79,81,84,86],{"depth":30,"slug":74,"text":75},"web---1-jsfbox","WEB - 1. JSFBOX",{"depth":77,"slug":78,"text":78},4,"題目",{"depth":77,"slug":80,"text":80},"解法",{"depth":30,"slug":82,"text":83},"misc---1-eazy-jail","MISC - 1. Eazy Jail",{"depth":77,"slug":85,"text":78},"題目-1",{"depth":77,"slug":87,"text":80},"解法-1",[],[],{"title":65,"description":59,"publishDate":91,"tags":92,"draft":15,"minutesRead":53},"14 Sep 2024",[62,63,64],[],"contest-aegis-20240914.md"]